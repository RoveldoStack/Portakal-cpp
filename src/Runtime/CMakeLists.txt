# CMakeList.txt : CMake project for Portakal, include source and define
# project specific logic here.
#

# Add source to this project's executable.
add_library (Runtime "main.cpp" "Core/Core.h" "Window/WindowCreateDesc.h" "Window/Window.h" "Window/Window.cpp" "Containers/Array.h" "Containers/String.h" "Containers/String.cpp" "Memory/Memory.h" "Memory/Memory.cpp" "Containers/Guid.h" "Containers/Guid.cpp" "Win32/Win32Guid.h" "Win32/Win32Guid.cpp" "Compiler/CompilerDefinitions.h" "Win32/Win32Log.h" "Assert/Assert.h" "Win32/Win32Assert.h" "Math/Math.h" "Math/Math.cpp" "Math/Vector2.h" "Math/Vector3.h" "Win32/Win32Window.h" "Win32/Win32Window.cpp" "Platform/PlatformMessage.h" "Platform/PlatformMessage.cpp" "Win32/Win32Message.h" "Win32/Win32Message.cpp" "Platform/PlatformMessageBoxFlags.h" "Win32/Win32MessageUtils.h" "Win32/Win32MessageUtils.cpp" "Input/Keys.h" "Window/WindowEvent.h" "Window/WindowEventType.h" "Window/WindowClosedEvent.h" "Window/WindowMovedEvent.h" "Window/WindowResizedEvent.h" "Window/MouseWheelEvent.h" "Window/MouseMovedEvent.h" "Window/MouseButtonEvent.h" "Window/MouseButtonUpEvent.h" "Window/MouseButtonDownEvent.h" "Window/KeyboardKeyEvent.h" "Window/KeyboardKeyDownEvent.h" "Window/KeyboardKeyUpEvent.h" "Window/KeyboardCharEvent.h" "Window/WindowEvents.h" "Application/Application.h" "Application/Application.cpp" "Application/ApplicationModule.h" "Message/MessageType.h" "Message/IMessage.h" "Message/IMessageListener.h" "Message/MessageAPI.h" "Message/MessageAPI.cpp" "Message/MessageModule.h" "Message/MessageModule.cpp" "Reflection/Class.h" "Reflection/Type.h" "Reflection/Function.h" "Reflection/Type.cpp" "Reflection/Attribute.h" "Reflection/Attribute.cpp" "Reflection/Field.h" "Reflection/Field.cpp" "Reflection/Assembly.h" "Reflection/Assembly.cpp" "Reflection/Reflection.h" "Window/WindowAPI.h" "Window/WindowAPI.cpp" "Window/WindowModule.h" "Window/WindowModule.cpp" "Message/ConsoleMessageListener.h" "Message/ConsoleMessageListener.cpp" "Event/Delegate.h" "Event/Event.h" "Memory/ByteBlock.h" "Memory/ByteBlock.cpp" "Object/TaggedObject.h" "Platform/PlatformType.h" "Platform/PlatformDialog.h" "Platform/PlatformDialog.cpp" "Win32/Win32Dialog.h" "Win32/Win32Dialog.cpp" "Platform/PlatformFile.h" "Platform/PlatformFile.cpp" "Win32/Win32File.h" "Win32/Win32File.cpp" "Platform/PlatformDirectory.h" "Platform/PlatformDirectory.cpp" "Win32/Win32Directory.h" "Win32/Win32Directory.cpp" "Platform/PlatformProcess.h" "Platform/PlatformProcess.cpp" "Win32/Win32Process.h" "Win32/Win32Process.cpp" "World/Component.h" "World/Component.cpp" "World/Entity.h" "World/Scene.h" "World/SceneDescriptor.h" "World/SceneAspect.h" "Yaml/YamlSerializerAttribute.h" "Yaml/IYamlSerializer.h" "Yaml/Yaml.h" "Reflection/AppDomain.h" "World/SceneAPI.h" "World/SceneAPI.cpp" "Graphics/WindowedGraphicsDeviceCreateDesc.h" "Graphics/GraphicsBackend.h" "Graphics/StandaloneGraphicsDeviceCreateDesc.h" "Graphics/TextureFormat.h" "Graphics/GraphicsDeviceAPI.h" "Graphics/GraphicsDeviceAPI.cpp" "Graphics/GraphicsModule.h" "Graphics/GraphicsModule.cpp" "Graphics/GraphicsModuleParams.h" "Graphics/GraphicsDevice.h" "Graphics/GraphicsDevice.cpp" "Graphics/GraphicsBufferType.h"  "Graphics/GraphicsBufferCreateDesc.h" "Graphics/GraphicsBufferUpdateDesc.h" "Graphics/GraphicsDeviceObject.h" "Graphics/GraphicsDeviceObjectType.h" "Graphics/GraphicsDeviceObject.cpp" "Graphics/GraphicsBuffer.h" "Graphics/GraphicsDeviceObjects.h" "Graphics/ShaderStage.h" "Graphics/ShaderCreateDesc.h" "Graphics/Shader.h"  "Graphics/CommandList.h" "Graphics/CommandList.cpp" "Graphics/TextureUpdateDesc.h" "Graphics/ScissorDesc.h" "Graphics/ViewportDesc.h" "Graphics/CommandListCreateDesc.h" "Graphics/TextureCreateDesc.h" "Graphics/TextureType.h" "Graphics/TextureUsage.h" "Graphics/TextureLoadResult.h" "Graphics/TextureLoader.h" "Graphics/TextureLoader.cpp" "Graphics/TextureLoaderUtils.h" "Graphics/TextureLoaderUtils.cpp" "Graphics/BlendFactor.h" "Graphics/BlendFunction.h" "Graphics/BlendingAttachmentDesc.h" "Graphics/BlendingStateDesc.h" "Graphics/ComparisionMethod.h" "Graphics/FaceCullMode.h" "Graphics/FrontFaceDirection.h" "Graphics/InputElementDataFormat.h" "Graphics/InputElementSemantic.h" "Graphics/MeshShadeMode.h" "Graphics/MeshTopology.h" "Graphics/InputElementDesc.h" "Graphics/InputLayoutDesc.h" "Graphics/OutputAttachmentDesc.h" "Graphics/OutputDesc.h" "Graphics/StencilOperation.h"  "Graphics/RasterizerState.h" "Graphics/DepthStencilStateDesc.h" "Graphics/PipelineBindPoint.h" "Graphics/GraphicsPipelineCreateDesc.h" "Graphics/PipelineResourceType.h" "Graphics/PipelineResourceTableDesc.h" "Graphics/PipelineResourceEntry.h"  "Graphics/Texture.h" "Graphics/SamplerFiltering.h" "Graphics/SamplerBorderColor.h" "Graphics/SamplerAddress.h" "Graphics/Sampler.h" "Graphics/SamplerCreateDesc.h" "Graphics/FramebufferAttachmentDesc.h" "Graphics/FramebufferCreateDesc.h" "Graphics/Framebuffer.h" "Graphics/Framebuffer.cpp"  "Graphics/Pipeline.h" "Graphics/ResourceStateDesc.h"  "Graphics/ResourceTableCreateDesc.h" "Graphics/ResourceTable.h" "Graphics/StencilFaceDesc.h" "Window/WindowChildDeviceAdapter.h" "Window/WindowChildDeviceAdapter.cpp" "DX12/Core.h" "DX12/DX12Device.h" "DX12/DX12Device.cpp"    "DXGI/DXGIUtils.h" "DXGI/DXGIUtils.cpp" "DX12/DX12DeviceObjects.h" "DX12/DX12Buffer.h" "DX12/DX12Buffer.cpp" "DX12/DX12BufferUtils.h" "DX12/DX12BufferUtils.cpp" "DX12/DX12Shader.h" "DX12/DX12Shader.cpp" "D3DCompiler/D3DCompilerUtils.h" "D3DCompiler/D3DCompilerUtils.cpp" "DX12/DX12Texture.h" "DX12/DX12TextureUtils.h" "DX12/DX12TextureUtils.cpp" "DX12/DX12Texture.cpp" "DX12/DX12ResourceUtils.h" "DX12/DX12ResourceUtils.cpp" "DX12/DX12ResourceTable.h" "DX12/DX12ResourceTable.cpp" "DX12/DX12Sampler.h" "DX12/DX12Sampler.cpp"  "DX12/DX12SamplerUtils.h" "DX12/DX12SamplerUtils.cpp" "DX12/DX12PipelineUtils.h" "DX12/DX12PipelineUtils.cpp" "DX12/DX12Framebuffer.h" "DX12/DX12Framebuffer.cpp" "DX12/DX12GraphicsPipeline.h" "DX12/DX12GraphicsPipeline.cpp" "Graphics/PipelineUtils.h" "Graphics/PipelineUtils.cpp" "DX12/DX12GraphicsCommandList.h" "DX12/DX12GraphicsCommandList.cpp" "Graphics/ComputePipelineCreateDesc.h" "Platform/PlatformTime.h" "Platform/PlatformTime.cpp" "Win32/Win32Time.h"  "Win32/Win32Time.cpp" "Time/Stopwatch.h" "Time/Stopwatch.cpp" "Memory/SharedHeap.h" "Memory/OwnedHeap.h"       "Time/Time.h" "Time/Time.cpp" "Graphics/LogicOperation.h" "Graphics/Swapchain.h" "Graphics/SwapchainCreateDesc.h" "DX12/DX12Swapchain.h" "DX12/DX12Swapchain.cpp" "DX12/DX12Resource.h" "Graphics/Swapchain.cpp" "Graphics/CommandQueueType.h" "Resource/Resource.h" "Resource/ResourceSubObject.h" "Resource/IResourceSerializer.h" "Resource/CustomResourceSerializerAttribute.h"  "Resource/ResourceAPI.h" "Application/ApplicationModule.cpp" "Platform/PlatformPaths.h" "Resource/Texture/TextureResource.h" "Resource/Texture/TextureResource.cpp" "Graphics/TextureUtils.h" "Graphics/TextureUtils.cpp" "Platform/PlatformPaths.cpp" "Win32/Win32Paths.h" "Win32/Win32Paths.cpp" "Window/DragDropEvent.h" "Platform/PlatformMonitor.h" "Platform/PlatformMonitor.cpp" "Win32/Win32Monitor.h" "Win32/Win32Monitor.cpp" "Platform/PlatformExplorer.h" "Platform/PlatformExplorer.cpp" "Win32/Win32Explorer.h" "Win32/Win32Explorer.cpp"  "Win32/Win32API.h" "Win32/Win32Keys.h" "Win32/Win32Keys.cpp" "Reflection/AccessSpecifier.h" "World/SceneDescriptorYamlSerializer.h" "World/SceneDescriptorYamlSerializer.cpp" "Platform/PlatformError.h" "Platform/PlatformError.cpp" "Win32/Win32Error.h" "Win32/Win32Error.cpp" "World/Scene.cpp" "World/SceneModule.h" "World/SceneModule.cpp" "World/Entity.cpp" "Resource/RenderTarget/RenderTarget.h" "Resource/RenderTarget/RenderTarget.cpp" "World/Aspects/SpriteRendererAspect.h" "World/Aspects/SpriteRendererAspect.cpp" "World/Aspects/DisplayAspect.h" "World/Aspects/DisplayAspect.cpp" "Containers/Registry.h" "Resource/ResourceModule.h" "Resource/ResourceModule.cpp" "World/Aspects/InvalidAspect.h" "World/Aspects/InvalidAspect.cpp" "Resource/ResourceAPI.cpp" "Resource/Resource.cpp" "Resource/Texture/TextureSerializer.h" "Resource/Texture/TextureSerializer.cpp" "Math/Color4.h"    "Resource/Scene/SceneSerializer.h" "Resource/Scene/SceneSerializer.cpp" "Resource/ResourceDescriptor.h" "World/Components/Transform2DComponent.h" "World/Components/Transform2DComponent.cpp" "World/Components/InvalidComponent.h" "World/Components/InvalidComponent.cpp" "Reflection/PrimalTypes.h" "World/Components/SpriteCamera.h" "World/Components/SpriteCamera.cpp" "Architecture/Architecture.h" "RuntimeModules.h" "Resource/ResourceSerializers.h"   "Platform/Platform.h" "Platform/Platform.cpp" "Platform/PlatformMutex.h" "Win32/Win32Mutex.h" "Win32/Win32Mutex.cpp" "Platform/PlatformMutex.cpp" "Platform/PlatformThread.h" "Platform/PlatformThread.cpp" "Win32/Win32Thread.h" "Win32/Win32Thread.cpp" "Job/Job.h"    "Thread/MutexLockResult.h"     "Platform/PlatformCriticalSection.h" "Platform/PlatformCriticalSection.cpp" "Win32/Win32CriticalSection.h" "Win32/Win32CriticalSection.cpp" "Job/Job.cpp" "Resource/ResourceLoadJob.h" "Resource/ResourceLoadJob.cpp" "Graphics/Fence.h" "Graphics/Fence.cpp" "DX12/DX12Fence.h" "DX12/DX12Fence.cpp" "DX11/Core.h" "DX11/DX11Device.h" "DX11/DX11Device.cpp" "DX11/DX11DeviceObjects.h" "DX11/DX11Swapchain.h" "DX11/DX11Swapchain.cpp" "DX11/DX11Texture.h" "DX11/DX11Texture.cpp" "DX11/DX11CommandList.h" "DX11/DX11CommandList.cpp" "DX11/DX11ResourceTable.h" "DX11/DX11ResourceTable.cpp" "DX11/DX11Framebuffer.h" "DX11/DX11Framebuffer.cpp" "Job/JobSystem.h" "Platform/PlatformInfo.h" "Platform/PlatformInfo.cpp" "Win32/Win32Info.h" "Win32/Win32Info.cpp" "Job/JobSystem.cpp" "Job/WorkerThreadJob.h" "Job/WorkerThreadJob.cpp" "DX11/DX11Shader.h" "DX11/DX11Shader.cpp" "DX11/DX11TextureUtils.h" "DX11/DX11TextureUtils.cpp" "DX11/DX11Buffer.h" "DX11/DX11Buffer.cpp" "DX11/DX11BufferUtils.h" "DX11/DX11BufferUtils.cpp" "DX11/DX11Sampler.h" "DX11/DX11Sampler.cpp" "DX11/DX11SamplerUtils.h" "DX11/DX11SamplerUtils.cpp" "DX11/DX11PipelineUtils.h" "DX11/DX11PipelineUtils.cpp" "DX11/DX11Pipeline.h" "DX11/DX11Pipeline.cpp" "Math/Matrix4x4.h")

if (CMAKE_VERSION VERSION_GREATER 3.12)
  set_property(TARGET Runtime PROPERTY CXX_STANDARD 20)
endif()

# TODO: Add tests and install targets if needed.

#compiler flags
if(WIN32)
add_compile_definitions(PORTAKAL_OS_WINDOWS)
endif()

if(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
  add_compile_definitions(PORTAKAL_COMPILER_MSVC)
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
  add_compile_definitions(PORTAKAL_COMPILER_CLANG)
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
  add_compile_definitions(PORTAKAL_COMPILER_GNU)
else()
  add_compile_definitions(PORTAKAL_COMPILER_INVALID)
endif()

if( CMAKE_SYSTEM_PROCESSOR STREQUAL "64Bit" )
    add_compile_definitions(PORTAKAL_ARCHITECTURE_X64)
else()
    add_compile_definitions(PORTAKAL_ARCHITECTURE_X86)
endif()

if (CMAKE_BUILD_TYPE STREQUAL "Debug")
add_compile_definitions(PORTAKAL_DEBUG)
endif()

add_compile_definitions(PORTAKAL_SAFE)

include_directories(${CMAKE_SOURCE_DIR}/src)

if(WIN32)
target_link_libraries(Runtime d3d12.lib)
target_link_libraries(Runtime d3d11.lib)
target_link_libraries(Runtime dxgi.lib)
target_link_libraries(Runtime d3dcompiler.lib)
target_link_libraries(Runtime Shlwapi.lib)
target_link_libraries(Runtime Comctl32.lib)
endif()

target_link_libraries(Runtime Stbi)
target_link_libraries(Runtime yaml-cpp)